local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local animationIds = {
	["rbxassetid://10503381238"] = true,
	["rbxassetid://13379003796"] = true,
}

local TWEEN_OFFSET = Vector3.new(0, 4.9, 0)
local LOCK_DURATION = 0.66
local CHAOS_DURATION = 0.16

local aimlockConnection, systemConnection, target = nil, nil, nil

local function startAimlock(targetModel)
	if aimlockConnection then aimlockConnection:Disconnect() end

	local cam = Workspace.CurrentCamera
	local myChar = LocalPlayer.Character
	local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
	if not (targetModel and myRoot and cam) then return end

	local start = tick()

	aimlockConnection = RunService.RenderStepped:Connect(function()
		local targetRoot = targetModel:FindFirstChild("HumanoidRootPart")
		if not targetRoot then return end

		local now = tick()
		local targetPos = targetRoot.Position
		local camPos = cam.CFrame.Position

		if now - start < CHAOS_DURATION then
			local angleX = math.rad(math.random(-15, 25))
			local angleY = math.rad(math.random(-15, 25))
			local base = CFrame.new(camPos, targetPos)
			cam.CFrame = base * CFrame.Angles(angleY, angleX, 0)
		else
			cam.CFrame = CFrame.new(camPos, targetPos)
		end

		myRoot.CFrame = CFrame.new(myRoot.Position, cam.CFrame.Position + cam.CFrame.LookVector)
	end)

	task.delay(LOCK_DURATION, function()
		if aimlockConnection then
			aimlockConnection:Disconnect()
			aimlockConnection = nil
			target = nil
		end
	end)
end

local function activateSystem(character)
	local humanoid = character:WaitForChild("Humanoid", 2)
	local hrp = character:WaitForChild("HumanoidRootPart", 2)
	if not humanoid or not hrp then return end

	if systemConnection then systemConnection:Disconnect() end

	systemConnection = RunService.RenderStepped:Connect(function()
		for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
			if animationIds[track.Animation.AnimationId] then
				local live = Workspace:FindFirstChild("Live")
				local nearest, shortest = nil, 15

				if live then
					for _, model in ipairs(live:GetChildren()) do
						if model:IsA("Model") and model ~= character then
							local r = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Head") or model:FindFirstChild("UpperTorso")
							if r then
								local dist = (hrp.Position - r.Position).Magnitude
								if dist < shortest then
									shortest = dist
									nearest = model
								end
							end
						end
					end
				end

				if nearest then
					local pos = nearest:FindFirstChild("HumanoidRootPart").Position + TWEEN_OFFSET
					local tween = TweenService:Create(hrp, TweenInfo.new(0.1, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pos)})
					tween:Play()
					tween.Completed:Wait()

					local bp = Instance.new("BodyPosition")
					bp.MaxForce = Vector3.new(1e6, 1e6, 1e6)
					bp.P = 10000
					bp.D = 100
					bp.Position = pos
					bp.Parent = hrp

					task.delay(0.76, function()
						if bp then bp:Destroy() end
					end)

					local remote = character:FindFirstChild("Communicate")
					if remote then
						remote:FireServer({
							{Dash = Enum.KeyCode.W, Key = Enum.KeyCode.Q, Goal = "KeyPress"}
						})
					end

					target = nearest
					startAimlock(target)
				end
				break
			end
		end
	end)
end

-- ✅ ENTRY POINT: ไม่ทำงานหากไม่ได้เปิด getgenv()
if not getgenv().KIBA_ENABLED then return end

if LocalPlayer.Character then
	activateSystem(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(function(char)
	activateSystem(char)
end)
