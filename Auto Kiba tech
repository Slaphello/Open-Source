--// Constants
local TWEEN_HEIGHT_OFFSET = Vector3.new(0, 4.9, 0)
local DASH_COOLDOWN = 4
local LOCAL_DASH_VELOCITY = 120
local AIMLOCK_DURATION = 0.67
local CHAOS_DURATION = 0.16
local ANIMATION_IDS = {
    ["rbxassetid://10503381238"] = true,
    ["rbxassetid://13379003796"] = true,
}

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

--// Variables
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local systemEnabled = getgenv().KIBA_ENABLED
local toggleKey = getgenv().KIBA_TOGGLE_KEY
local toggleConnection, aimlockConnection
local lockedTarget, cooldown = nil, false

--// Notify
local function notify(text)
    pcall(function()
        game.StarterGui:SetCore("SendNotification", {
            Title = "KIBA",
            Text = text,
            Duration = 3
        })
    end)
end

--// Dash
local function localDash(character)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local bv = Instance.new("BodyVelocity")
    bv.Velocity = hrp.CFrame.LookVector * LOCAL_DASH_VELOCITY
    bv.MaxForce = Vector3.new(1e5, 0, 1e5)
    bv.P = 1e4
    bv.Parent = hrp
    task.delay(0.15, function()
        bv:Destroy()
    end)
end

local function fireServerDash(character)
    local remote = character:FindFirstChild("Communicate")
    if remote then
        remote:FireServer({
            Dash = Enum.KeyCode.W,
            Key = Enum.KeyCode.Q,
            Goal = "KeyPress"
        })
    end
end

--// Aimlock
local function startAimlock(target)
    if aimlockConnection then aimlockConnection:Disconnect() end
    local character = LocalPlayer.Character
    local startTime = tick()

    aimlockConnection = RunService.RenderStepped:Connect(function()
        if not (target and target:FindFirstChild("HumanoidRootPart")) then return end
        if not (character and character:FindFirstChild("HumanoidRootPart")) then return end

        local now = tick()
        local targetPos = target.HumanoidRootPart.Position
        local camPos = Camera.CFrame.Position

        if now - startTime < CHAOS_DURATION then
            local x = math.rad(math.random(-15, 25))
            local y = math.rad(math.random(-15, 25))
            local cframe = CFrame.new(camPos, targetPos)
            Camera.CFrame = cframe * CFrame.Angles(y, x, 0)
        else
            Camera.CFrame = CFrame.new(camPos, targetPos)
        end

        character.HumanoidRootPart.CFrame = CFrame.new(character.HumanoidRootPart.Position, Camera.CFrame.Position + Camera.CFrame.LookVector)
    end)

    task.delay(AIMLOCK_DURATION, function()
        if aimlockConnection then aimlockConnection:Disconnect() end
        lockedTarget = nil
    end)
end

--// Tween & Engage
local function engageTarget(character)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    if not hrp or not humanoid then return end

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        if track.Animation and ANIMATION_IDS[track.Animation.AnimationId] then
            local closest, minDist = nil, 15
            local live = Workspace:FindFirstChild("Live")
            if live then
                for _, model in ipairs(live:GetChildren()) do
                    if model:IsA("Model") and model ~= character then
                        local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Head") or model:FindFirstChild("UpperTorso")
                        if root then
                            local dist = (hrp.Position - root.Position).Magnitude
                            if dist < minDist then
                                closest, minDist = model, dist
                            end
                        end
                    end
                end
            end

            if closest then
                local targetPos = closest.HumanoidRootPart.Position + TWEEN_HEIGHT_OFFSET
                TweenService:Create(hrp, TweenInfo.new(0.1, Enum.EasingStyle.Linear), {
                    CFrame = CFrame.new(targetPos)
                }):Play()

                task.delay(0.1, function()
                    local bp = Instance.new("BodyPosition")
                    bp.Position = targetPos
                    bp.MaxForce = Vector3.new(1e5, 1e5, 1e5)
                    bp.P, bp.D = 1e4, 100
                    bp.Parent = hrp
                    task.delay(0.76, function()
                        bp:Destroy()
                    end)
                end)

                localDash(character)
                fireServerDash(character)
                lockedTarget = closest
                startAimlock(lockedTarget)
            end
            break
        end
    end
end

--// Character Setup
local function setupCharacter(character)
    if toggleConnection then toggleConnection:Disconnect() end
    if aimlockConnection then aimlockConnection:Disconnect() end

    toggleConnection = RunService.RenderStepped:Connect(function()
        if systemEnabled and not cooldown then
            engageTarget(character)
            cooldown = true
            task.delay(DASH_COOLDOWN, function()
                cooldown = false
            end)
        end
    end)
end

--// Toggle Key
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == toggleKey then
        systemEnabled = not systemEnabled
        notify("KIBA is now " .. (systemEnabled and "Enabled" or "Disabled"))
        if systemEnabled and LocalPlayer.Character then
            setupCharacter(LocalPlayer.Character)
        elseif toggleConnection then
            toggleConnection:Disconnect()
        end
    end
end)

--// Auto Setup
LocalPlayer.CharacterAdded:Connect(function(char)
    if systemEnabled then setupCharacter(char) end
end)

if LocalPlayer.Character then
    setupCharacter(LocalPlayer.Character)
end
