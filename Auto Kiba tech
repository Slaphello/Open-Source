-- SERVICES
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

-- CONSTANTS
local animationIds = {
	["rbxassetid://10503381238"] = true,
	["rbxassetid://13379003796"] = true,
}
local TWEEN_HEIGHT_OFFSET = Vector3.new(0, 5, 0)
local MAX_TARGET_DISTANCE = 15

-- VARIABLES
local player = Players.LocalPlayer
local aimlockConnection = nil
local monitorConnection = nil
local lockedTarget = nil

-- UTILS
local function notify(message)
	StarterGui:SetCore("SendNotification", {
		Title = "KIBA System",
		Text = message,
		Duration = 2
	})
end

local function disconnectConnection(conn)
	if conn then
		conn:Disconnect()
		conn = nil
	end
	return conn
end

-- AIMLOCK
local function startAimlock(target)
	aimlockConnection = disconnectConnection(aimlockConnection)

	local cam = Workspace.CurrentCamera
	local character = player.Character
	local startTime = tick()
	local chaosDuration = 0.15
	local lockDuration = 0.65

	aimlockConnection = RunService.RenderStepped:Connect(function()
		if not target or not target.Parent or not target:FindFirstChild("HumanoidRootPart") then return end
		if not character or not character:FindFirstChild("HumanoidRootPart") then return end

		local now = tick()
		local camPos = cam.CFrame.Position
		local targetPos = target.HumanoidRootPart.Position

		local baseCFrame = CFrame.new(camPos, targetPos)
		if now - startTime < chaosDuration then
			local angleX = math.rad(math.random(-15, 25))
			local angleY = math.rad(math.random(-15, 25))
			cam.CFrame = baseCFrame * CFrame.Angles(angleY, angleX, 0)
		else
			cam.CFrame = baseCFrame
		end

		character.HumanoidRootPart.CFrame = CFrame.new(character.HumanoidRootPart.Position, cam.CFrame.Position + cam.CFrame.LookVector)
	end)

	task.delay(lockDuration, function()
		aimlockConnection = disconnectConnection(aimlockConnection)
		lockedTarget = nil
	end)
end

-- SETUP CHARACTER
local function setupCharacter(character)
	monitorConnection = disconnectConnection(monitorConnection)
	aimlockConnection = disconnectConnection(aimlockConnection)
	lockedTarget = nil

	if not getgenv().KIBA_ENABLED then return end

	local isTweening = false
	local lastPlaying = false
	local cooldown = false

	monitorConnection = RunService.RenderStepped:Connect(function()
		if not character or not character.Parent then return end

		local hrp = character:FindFirstChild("HumanoidRootPart")
		local humanoid = character:FindFirstChild("Humanoid")
		if not hrp or not humanoid then return end

		local isPlaying = false
		for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
			if track.Animation and animationIds[track.Animation.AnimationId] then
				isPlaying = true
				break
			end
		end

		if isPlaying and not isTweening and not lastPlaying and not cooldown then
			isTweening = true
			lastPlaying = true
			cooldown = true

			task.spawn(function()
				local live = Workspace:FindFirstChild("Live")
				if not live then
					isTweening = false
					cooldown = false
					return
				end

				local nearest = nil
				local shortest = MAX_TARGET_DISTANCE

				for _, model in pairs(live:GetChildren()) do
					if model:IsA("Model") and model ~= character then
						local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Head") or model:FindFirstChild("UpperTorso")
						if root then
							local dist = (hrp.Position - root.Position).Magnitude
							if dist < shortest then
								shortest = dist
								nearest = model
							end
						end
					end
				end

				if nearest and nearest:FindFirstChild("HumanoidRootPart") then
					local targetPos = nearest.HumanoidRootPart.Position + TWEEN_HEIGHT_OFFSET

					local tween = TweenService:Create(hrp, TweenInfo.new(0.1, Enum.EasingStyle.Linear), { CFrame = CFrame.new(targetPos) })
					tween:Play()
					tween.Completed:Wait()

					local bp = Instance.new("BodyPosition")
					bp.MaxForce = Vector3.new(1e5, 1e5, 1e5)
					bp.P = 10000
					bp.D = 100
					bp.Position = targetPos
					bp.Parent = hrp

					task.delay(0.76, function()
						if bp and bp.Parent then
							bp:Destroy()
						end
					end)

					local remote = character:FindFirstChild("Communicate")
					if remote then
						remote:FireServer({
							{ Dash = Enum.KeyCode.W, Key = Enum.KeyCode.Q, Goal = "KeyPress" }
						})
					end

					lockedTarget = nearest
					startAimlock(lockedTarget)
				end

				isTweening = false
				task.delay(4, function()
					cooldown = false
				end)
			end)
		elseif not isPlaying then
			lastPlaying = false
		end
	end)
end

-- TOGGLE SYSTEM
local function notifyAndToggle()
	getgenv().KIBA_ENABLED = not getgenv().KIBA_ENABLED
	StarterGui:SetCore("SendNotification", {
		Title = "KIBA System",
		Text = getgenv().KIBA_ENABLED and "ENABLED" or "DISABLED",
		Duration = 2,
	})

	if getgenv().KIBA_ENABLED and player.Character then
		setupCharacter(player.Character)
	else
		monitorConnection = disconnectConnection(monitorConnection)
		aimlockConnection = disconnectConnection(aimlockConnection)
	end
end

local function disconnectConnection(conn)
	if conn then
		conn:Disconnect()
		conn = nil
	end
	return conn
end

-- KEYBIND TOGGLE
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == getgenv().KIBA_TOGGLE_KEY then
		notifyAndToggle()
	end
end)

-- CHARACTER ADDED EVENT
player.CharacterAdded:Connect(function(char)
	if getgenv().KIBA_ENABLED then
		setupCharacter(char)
	end
end)

-- INITIAL SETUP
if player.Character and getgenv().KIBA_ENABLED then
	setupCharacter(player.Character)
end
